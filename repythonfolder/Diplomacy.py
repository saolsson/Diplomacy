import Territory
import Connection
import ConnectionInfo
import Country
import Army
import Navy
import StartingUnit

def main():    
    #List of Territores and Countries
    Territories = []
    Countries = []

    #Create each territory, with name, our list of territories, whether it's a supply center, and whether it's accessible to fleets and armies)
    AdriaticSea=Territory.Territory("AdriaticSea",Territories,0,1,0)
    AegeanSea=Territory.Territory("AegeanSea",Territories,0,1,0)
    Albania=Territory.Territory("Albania",Territories,0,1,1)
    Ankara=Territory.Territory("Ankara",Territories,1,1,1)
    Apulia=Territory.Territory("Apulia",Territories,0,1,1)
    Armenia=Territory.Territory("Armenia",Territories,0,1,1)
    BalticSea=Territory.Territory("BalticSea",Territories,0,1,0)
    BarentsSea=Territory.Territory("BarentsSea",Territories,0,1,0)
    Belgium=Territory.Territory("Belgium",Territories,1,1,1)
    Berlin=Territory.Territory("Berlin",Territories,1,1,1)
    BlackSea=Territory.Territory("BlackSea",Territories,0,1,0)
    Bohemia=Territory.Territory("Bohemia",Territories,0,0,1)
    Brest=Territory.Territory("Brest",Territories,1,1,1)
    Budapest=Territory.Territory("Budapest",Territories,1,0,1)
    Bulgaria=Territory.Territory("Bulgaria",Territories,1,1,1)
    Burgundy=Territory.Territory("Burgundy",Territories,0,0,1)
    Clyde=Territory.Territory("Clyde",Territories,0,1,1)
    Constantinople=Territory.Territory("Constantinople",Territories,1,1,1)
    Denmark=Territory.Territory("Denmark",Territories,1,1,1)
    EasternMediterranean=Territory.Territory("EasternMediterranean",Territories,0,1,0)
    Edinburgh=Territory.Territory("Edinburgh",Territories,1,1,1)
    EnglishChannel=Territory.Territory("EnglishChannel",Territories,0,1,0)
    Finland=Territory.Territory("Finland",Territories,0,1,1)
    Galicia=Territory.Territory("Galicia",Territories,0,0,1)
    Gascony=Territory.Territory("Gascony",Territories,0,1,1)
    Greece=Territory.Territory("Greece",Territories,1,1,1,)
    GulfofLyon=Territory.Territory("GulfofLyon",Territories,0,1,0)
    GulfofBothnia=Territory.Territory("GulfofBothnia",Territories,0,1,0)
    HelgolandBight=Territory.Territory("HelgolandBight",Territories,0,1,0)
    Holland=Territory.Territory("Holland",Territories,1,1,1)
    IonianSea=Territory.Territory("IonianSea",Territories,0,1,0)
    IrishSea=Territory.Territory("IrishSea",Territories,0,1,0)
    Kiel=Territory.Territory("Kiel",Territories,1,1,1)
    Liverpool=Territory.Territory("Liverpool",Territories,1,1,1)
    Livonia=Territory.Territory("Livonia",Territories,0,1,1)
    London=Territory.Territory("London",Territories,1,1,1)
    Marseilles=Territory.Territory("Marseilles",Territories,1,1,1)
    MidAtlanticOcean=Territory.Territory("MidAtlanticOcean",Territories,0,1,0)
    Moscow=Territory.Territory("Moscow",Territories,1,0,1)
    Munich=Territory.Territory("Munich",Territories,1,0,1)
    Naples=Territory.Territory("Naples",Territories,1,1,1)
    NorthAtlanticOcean=Territory.Territory("NorthAtlanticOcean",Territories,0,1,0)
    NorthAfrica=Territory.Territory("NorthAfrica",Territories,0,1,1)
    NorthSea=Territory.Territory("NorthSea",Territories,0,1,0)
    Norway=Territory.Territory("Norway",Territories,1,1,1)
    NorwegianSea=Territory.Territory("NorwegianSea",Territories,0,1,0)
    Paris=Territory.Territory("Paris",Territories,1,0,1)
    Picardy=Territory.Territory("Picardy",Territories,0,1,1)
    Piedmont=Territory.Territory("Piedmont",Territories,0,1,1)
    Portugal=Territory.Territory("Portugal",Territories,1,1,1)
    Prussia=Territory.Territory("Prussia",Territories,0,1,1)
    Rome=Territory.Territory("Rome",Territories,1,1,1)
    Ruhr=Territory.Territory("Ruhr",Territories,0,0,1)
    Rumania=Territory.Territory("Rumania",Territories,1,1,1)
    Serbia=Territory.Territory("Serbia",Territories,1,0,1)
    Sevastopol=Territory.Territory("Sevastopol",Territories,1,1,1)
    Silesia=Territory.Territory("Silesia",Territories,0,0,1)
    Skagerrak=Territory.Territory("Skagerrak",Territories,0,1,0)
    Smyrna=Territory.Territory("Smyrna",Territories,1,1,1)
    Spain=Territory.Territory("Spain",Territories,1,1,1)
    StPetersburg=Territory.Territory("StPetersburg",Territories,1,1,1)
    Sweden=Territory.Territory("Sweden",Territories,1,1,1)
    Syria=Territory.Territory("Syria",Territories,0,1,1)
    Trieste=Territory.Territory("Trieste",Territories,1,1,1)
    Tunis=Territory.Territory("Tunis",Territories,1,1,1,)
    Tuscany=Territory.Territory("Tuscany",Territories,0,1,1)
    Tyrolia=Territory.Territory("Tyrolia",Territories,0,0,1)
    TyrrhenianSea=Territory.Territory("TyrrhenianSea",Territories,0,1,0)
    Ukraine=Territory.Territory("Ukraine",Territories,0,0,1)
    Venice=Territory.Territory("Venice",Territories,1,1,1)
    Vienna=Territory.Territory("Vienna",Territories,1,0,1)
    Wales=Territory.Territory("Wales",Territories,0,1,1)
    Warsaw=Territory.Territory("Warsaw",Territories,1,0,1)
    WesternMediterranean=Territory.Territory("WesternMediterranean",Territories,0,1,0)
    Yorkshire=Territory.Territory("Yorkshire",Territories,0,1,1)
    
    #We have to create every territory before we can start connecting them together
    AdriaticSea.addConnections([Albania,IonianSea,Apulia,Venice,Trieste])
    AegeanSea.addConnections([IonianSea,Greece,Bulgaria,Constantinople,Smyrna,EasternMediterranean])
    Albania.addConnections([IonianSea,Trieste,Serbia,Greece])
    Ankara.addConnections([Constantinople,BlackSea,Armenia,ConnectionInfo.ConnectionInfo(Smyrna,False)])
    Apulia.addConnections([IonianSea,ConnectionInfo.ConnectionInfo(Rome,False),Naples,Venice])
    Armenia.addConnections([Syria,Smyrna,BlackSea,Sevastopol])
    BalticSea.addConnections([GulfofBothnia,Livonia,Prussia,Berlin,Kiel,Denmark,Sweden])
    BarentsSea.addConnections([StPetersburg,Norway,NorwegianSea])
    Belgium.addConnections([Holland,Ruhr,Burgundy,Picardy,EnglishChannel,NorthSea])
    Berlin.addConnections([Prussia,Silesia,Munich,Kiel])
    BlackSea.addConnections([Constantinople,Bulgaria,Rumania,Sevastopol])
    Bohemia.addConnections([Silesia,Galicia,Vienna,Tyrolia,Munich])
    Brest.addConnections([MidAtlanticOcean,EnglishChannel,Picardy,Paris,Gascony])
    Budapest.addConnections([Vienna,Galicia,Rumania,Serbia,Trieste])
    Bulgaria.addConnections([Greece,Serbia,Rumania,Constantinople])
    Burgundy.addConnections([Munich,Marseilles,Gascony,Paris,Picardy,Ruhr,Munich])
    Clyde.addConnections([Edinburgh,Liverpool,NorthAtlanticOcean,NorwegianSea])
    Constantinople.addConnections([Smyrna])
    Denmark.addConnections([Kiel,HelgolandBight,NorthSea,Skagerrak,Sweden])
    EasternMediterranean.addConnections([Syria,Smyrna,IonianSea])
    Edinburgh.addConnections([NorwegianSea,NorthSea,Yorkshire,ConnectionInfo.ConnectionInfo(Liverpool,False)])
    EnglishChannel.addConnections([MidAtlanticOcean,IrishSea,Wales,London,NorthSea,Picardy])
    Finland.addConnections([StPetersburg,GulfofBothnia,Sweden,Norway])
    Galicia.addConnections([Warsaw,Ukraine,Rumania,Vienna,Silesia])
    Gascony.addConnections([Spain,MidAtlanticOcean,Paris,ConnectionInfo.ConnectionInfo(Marseilles,False)])
    Greece.addConnections([IonianSea,Serbia])
    GulfofLyon.addConnections([Spain,WesternMediterranean,TyrrhenianSea,Tuscany,Piedmont,Marseilles])
    GulfofBothnia.addConnections([Sweden,StPetersburg,Livonia])
    HelgolandBight.addConnections([Kiel,Holland,NorthSea])
    Holland.addConnections([Ruhr,Kiel,NorthSea])
    IonianSea.addConnections([Tunis,TyrrhenianSea,Naples])
    IrishSea.addConnections([MidAtlanticOcean,NorthAtlanticOcean,Liverpool,Wales])
    Kiel.addConnections([Munich,Ruhr])
    Liverpool.addConnections([Wales,ConnectionInfo.ConnectionInfo(Yorkshire,False),NorthAtlanticOcean])
    Livonia.addConnections([StPetersburg,Moscow,Warsaw,Prussia])
    London.addConnections([NorthSea,Yorkshire,Wales])
    Marseilles.addConnections([Spain,Piedmont])
    MidAtlanticOcean.addConnections([Spain,Portugal,NorthAfrica,WesternMediterranean,NorthAtlanticOcean])
    Moscow.addConnections([StPetersburg,Warsaw,Ukraine,Sevastopol])
    Munich.addConnections([Ruhr,Silesia,Tyrolia])
    Naples.addConnections([TyrrhenianSea,Rome])
    NorthAtlanticOcean.addConnections([NorwegianSea])
    NorthAfrica.addConnections([Tunis,WesternMediterranean])
    NorthSea.addConnections([Yorkshire,Norway,NorwegianSea,Skagerrak])
    Norway.addConnections([NorwegianSea,Sweden,StPetersburg,Skagerrak])
    NorwegianSea.addConnections([])
    Paris.addConnections([Picardy])
    Picardy.addConnections([])
    Piedmont.addConnections([Tyrolia,ConnectionInfo.ConnectionInfo(Venice,False),Tuscany])
    Portugal.addConnections([Spain])
    Prussia.addConnections([Warsaw,Silesia])
    Rome.addConnections([Tuscany,ConnectionInfo.ConnectionInfo(Venice,False),TyrrhenianSea])
    Ruhr.addConnections([])
    Rumania.addConnections([Serbia,Ukraine,Sevastopol])
    Serbia.addConnections([Trieste])
    Sevastopol.addConnections([Ukraine])
    Silesia.addConnections([Warsaw])
    Skagerrak.addConnections([Sweden])
    Smyrna.addConnections([Syria])
    Spain.addConnections([WesternMediterranean])
    StPetersburg.addConnections([])
    Sweden.addConnections([])
    Syria.addConnections([])
    Trieste.addConnections([Venice,Vienna,Tyrolia])
    Tunis.addConnections([WesternMediterranean,TyrrhenianSea])
    Tuscany.addConnections([ConnectionInfo.ConnectionInfo(Venice,False),TyrrhenianSea])
    Tyrolia.addConnections([Vienna,Venice])
    TyrrhenianSea.addConnections([WesternMediterranean])
    Ukraine.addConnections([Warsaw])
    Venice.addConnections([])
    Vienna.addConnections([])
    Wales.addConnections([ConnectionInfo.ConnectionInfo(Yorkshire,False)])
    Warsaw.addConnections([])
    WesternMediterranean.addConnections([])
    Yorkshire.addConnections([])

    #Once all connections exist, we can update the value of every territory based on connections/supply centers
    for territory in Territories:
        territory.updateFirstOrder()

    for territory in Territories:
        territory.updateSecondOrder()

    for territory in Territories:
        territory.updateValue()

    def sortByMild(territory: Territory.Territory):
        return territory.mildValue
    
    terrs = sorted(Territories, key = sortByMild, reverse = True)
    
    #Now, we can finally create countries, and populate them with starting units.
    England = Country.Country("England",Countries,[StartingUnit.StartingUnit(Navy.Navy(),London),StartingUnit.StartingUnit(Army.Army(),Liverpool),StartingUnit.StartingUnit(Navy.Navy(),Edinburgh)])
    France = Country.Country("France",Countries,[StartingUnit.StartingUnit(Navy.Navy(),Brest),StartingUnit.StartingUnit(Army.Army(),Paris),StartingUnit.StartingUnit(Army.Army(),Marseilles)])
    Germany = Country.Country("Germany",Countries,[StartingUnit.StartingUnit(Army.Army(),Munich),StartingUnit.StartingUnit(Navy.Navy(),Kiel),StartingUnit.StartingUnit(Army.Army(),Berlin)])
    Italy = Country.Country("Italy",Countries,[StartingUnit.StartingUnit(Army.Army(),Venice),StartingUnit.StartingUnit(Army.Army(),Rome),StartingUnit.StartingUnit(Navy.Navy(),Naples)])
    Austria = Country.Country("Austria",Countries,[StartingUnit.StartingUnit(Army.Army(),Budapest),StartingUnit.StartingUnit(Army.Army(),Vienna),StartingUnit.StartingUnit(Navy.Navy(),Trieste)])
    Turkey = Country.Country("Turkey",Countries,[StartingUnit.StartingUnit(Army.Army(),Constantinople),StartingUnit.StartingUnit(Navy.Navy(),Ankara),StartingUnit.StartingUnit(Army.Army(),Smyrna)])
    Russia = Country.Country("Russia",Countries,[StartingUnit.StartingUnit(Navy.Navy(),StPetersburg),StartingUnit.StartingUnit(Army.Army(),Moscow),StartingUnit.StartingUnit(Army.Army(),Warsaw),StartingUnit.StartingUnit(Navy.Navy(),Sevastopol)])

    #for country in Countries:
    #    country.printValue()
    #    country.printUnitValues()
        
    England.move(London,NorthSea)
    England.move(Liverpool,London)
    England.move(Liverpool,Edinburgh)
    England.move(Liverpool,IrishSea)
    France.move(Brest,Paris)

    #for country in Countries:
    #    country.printValue()
    #    country.printUnitValues()



        
if __name__ == '__main__':
    main()